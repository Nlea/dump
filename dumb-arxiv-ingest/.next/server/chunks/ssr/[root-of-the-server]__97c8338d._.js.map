{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/nlea/Spaghetti/dump/dumb-arxiv-ingest/app/actions/actions.ts"],"sourcesContent":["\"use server\";\n\nimport * as cheerio from 'cheerio';\n\nexport async function scrapeArxivHtml(url: string): Promise<{ success: boolean; htmlContent?: string; textChunks?: string[]; error?: string }> {\n  console.log('Scraping URL:', url); // Log the URL being scraped\n\n  if (!url || !url.startsWith('https://arxiv.org/html/')) {\n    return { success: false, error: 'Invalid arXiv HTML URL provided. Must start with https://arxiv.org/html/' };\n  }\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        // Mimic a browser request\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      }\n    });\n\n    if (!response.ok) {\n      console.error('Fetch failed:', response.status, response.statusText);\n      return { success: false, error: `Failed to fetch URL: ${response.status} ${response.statusText}` };\n    }\n\n    const html = await response.text();\n    const $ = cheerio.load(html);\n\n    // Select the main article content container\n    const articleElement = $('article.ltx_document');\n\n    if (articleElement.length === 0) {\n        console.error('Could not find article.ltx_document element');\n        return { success: false, error: 'Could not find main article content on the page.' };\n    }\n\n    // --- Remove all image elements ---\n    articleElement.find('img').remove();\n    console.log('[Image Removal] Removed all img tags from the article content.');\n    // --- End Image Removal ---\n\n    // --- Wrap individual block-level elements and extract text ---\n    const textChunks: string[] = []; // Array to hold text content of chunks\n    const blockSelectors = 'p, ul, ol, blockquote, pre, dl'; // Add more selectors as needed (e.g., h1-h6)\n    articleElement.find(blockSelectors).each((_, el) => {\n        const $el = $(el);\n        // Avoid wrapping elements that are already wrapped or essentially empty\n        const currentText = $el.text().trim(); // Get text early\n        if ($el.parent().hasClass('content-chunk') || currentText === '') {\n            return;\n        }\n\n        // Avoid wrapping list items directly, wrap the parent list instead\n        if ($el.is('li') && $el.parent().is('ul, ol')) {\n             const $parentList = $el.parent();\n             // Check if the parent list is *already* wrapped\n             if (!$parentList.parent().hasClass('content-chunk')) {\n                 const listText = $parentList.text().trim(); // Get text of the list\n                 if (listText !== '') {\n                    $parentList.wrap('<div class=\"content-chunk\"></div>');\n                    textChunks.push(listText); // Add text of the whole list\n                 }\n             }\n             // Skip processing the LI further, as the list is handled\n             return;\n        }\n\n        // Wrap other block elements (p, blockquote, pre, dl) or lists (ul, ol) directly\n        // Ensure the element itself isn't already wrapped (might happen if UL/OL processed after LI)\n        if (!$el.parent().hasClass('content-chunk')) {\n             $el.wrap('<div class=\"content-chunk\"></div>');\n             textChunks.push(currentText); // Add text of the element\n        }\n    });\n    console.log(`[Chunking] Wrapped elements matching \"${blockSelectors}\" and extracted ${textChunks.length} text chunks.`);\n    // --- End Chunking ---\n\n    // Get the modified HTML content of the article (with chunks wrapped)\n    const articleHtml = articleElement.html();\n\n    if (!articleHtml) {\n        console.error('article.ltx_document element found but contains no HTML.');\n        return { success: false, error: 'Main article content is empty.' };\n    }\n\n    console.log('Scraping successful, returning HTML content and text chunks.');\n    // Return HTML content AND the array of text chunks\n    return { success: true, htmlContent: articleHtml, textChunks: textChunks };\n\n  } catch (error) {\n    console.error('Error during scraping:', error);\n    // Check if the error is a FetchError or similar network issue\n    if (error instanceof Error) {\n        return { success: false, error: `Scraping failed: ${error.message}` };\n    }\n    return { success: false, error: 'An unknown error occurred during scraping.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAIsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/nlea/Spaghetti/dump/dumb-arxiv-ingest/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport { useState, useEffect } from 'react';\nimport { scrapeArxivHtml } from './actions/actions';\nimport parse, { domToReact, HTMLReactParserOptions, Element, DOMNode } from 'html-react-parser';\n\nexport default function Home() {\n  const [urlInput, setUrlInput] = useState('');\n  const [error, setError] = useState('');\n  const [dumbMode, setDumbMode] = useState('eli5');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [scrapedHtml, setScrapedHtml] = useState<string | null>(null);\n  const [textChunks, setTextChunks] = useState<string[] | null>(null);\n  const [funTextChunks, setFunTextChunks] = useState<string[] | null>(null);\n  const [showFunVersion, setShowFunVersion] = useState<boolean>(true);\n\n  const [isValidUrl, setIsValidUrl] = useState<boolean | null>(null);\n  useEffect(() => {\n    if (!urlInput) {\n      setIsValidUrl(null); \n      return;\n    }\n    try {\n      const parsedUrl = new URL(urlInput);\n      setIsValidUrl(parsedUrl.protocol === 'https:' && parsedUrl.hostname === 'arxiv.org' && parsedUrl.pathname.startsWith('/html/'));\n    } catch (e) {\n      setIsValidUrl(false);\n    }\n  }, [urlInput]);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (isValidUrl === false || !urlInput) { \n      setError('Please provide a valid arXiv HTML page URL (e.g., https://arxiv.org/html/xxxx.xxxxx)');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setError('');\n    setScrapedHtml(null); \n    setTextChunks(null);\n    setFunTextChunks(null);\n    setShowFunVersion(true); \n\n    let scrapedChunks: string[] = [];\n\n    try {\n      console.log('Submitting URL:', urlInput, 'Mode:', dumbMode);\n      const result = await scrapeArxivHtml(urlInput);\n\n      if (result.success && result.htmlContent && result.textChunks) {\n        console.log('Scraping successful. Received HTML content and text chunks.');\n        setScrapedHtml(result.htmlContent); \n        setTextChunks(result.textChunks);\n        scrapedChunks = result.textChunks;\n\n        if (scrapedChunks.length > 0) {\n          console.log('--- Extracted Text Chunks ---');\n          scrapedChunks.forEach((chunk, index) => {\n            console.log(`Chunk ${index + 1}:`, chunk.substring(0, 100) + '...'); \n          });\n          console.log('----------------------------');\n        } else {\n          console.log('No text chunks returned from server action.');\n        }\n\n      } else {\n        console.error('Scraping failed:', result.error);\n        setError(result.error || 'Failed to scrape the page.');\n        setScrapedHtml(null);\n        setTextChunks(null);\n        setIsSubmitting(false); \n        return; \n      }\n    } catch (e) {\n      console.error('Error calling server action:', e);\n      setError('An unexpected error occurred during scraping.');\n      setScrapedHtml(null);\n      setTextChunks(null);\n      setIsSubmitting(false); \n      return; \n    } \n    \n    if (scrapedChunks.length > 0) {\n      console.log('Starting incremental fun text fetching...');\n      let fetchErrorOccurred = false;\n      \n      for (const [index, chunk] of scrapedChunks.entries()) {\n        console.log(`Fetching fun text for chunk ${index + 1}...`);\n        try {\n          const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"text/plain\");\n          myHeaders.append(\"Authorization\", \"Bearer dumpaihackathon\");\n\n          const requestOptions: RequestInit = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: chunk,\n            redirect: \"follow\"\n          };\n\n          console.log(\"Attempting to get a prompt \")\n          \n          const response = await fetch(\"https://dump.goalastair.com/proompt/poem\", requestOptions);\n\n          if (!response.ok) {\n            throw new Error(`API Error for chunk ${index + 1}: ${response.status} ${response.statusText}`);\n          }\n          \n          const funResult = await response.text();\n          console.log(`Received fun text for chunk ${index + 1}.`);\n          setFunTextChunks(prevChunks => {\n            const newChunks = [...(prevChunks || [])];\n            newChunks[index] = funResult;\n            return newChunks;\n          });\n        } catch (fetchError: any) {\n          console.error(`Error fetching fun text for chunk ${index + 1}:`, fetchError);\n          const errorMsg = `⚠️ Error getting fun version: ${chunk.substring(0, 50)}...`;\n          setFunTextChunks(prevChunks => {\n            const newChunks = [...(prevChunks || [])];\n            newChunks[index] = errorMsg;\n            return newChunks;\n          });\n          fetchErrorOccurred = true;\n        }\n      }\n      \n      console.log('Finished incremental fun text fetching loop.');\n      if (fetchErrorOccurred) {\n        setError(\"Some fun text versions could not be loaded.\");\n      }\n    } else {\n      setFunTextChunks([]);\n    }\n\n    setIsSubmitting(false); \n\n  };\n\n  const parserOptions: HTMLReactParserOptions = {\n    replace: (domNode) => {\n      if (\n        domNode instanceof Element &&\n        domNode.type === 'tag' &&\n        domNode.name === 'div' &&\n        domNode.attribs.class === 'content-chunk'\n      ) {\n        return (\n          <div className=\"mb-4 p-4 bg-gray-100 rounded-md shadow border border-gray-300 overflow-hidden prose max-w-none\">\n            {domToReact(domNode.children as DOMNode[], parserOptions)}\n          </div>\n        );\n      }\n    },\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50\">\n      <nav className=\"w-full bg-white/80 backdrop-blur-sm shadow-sm sticky top-0 z-10\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex items-center\">\n              <span className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600\">\n                dumbXiv\n              </span>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n\n        {!textChunks && !isSubmitting && (\n          <div className=\"max-w-2xl mx-auto text-center\">\n            <h1 className=\"text-4xl font-extrabold text-gray-800 sm:text-5xl md:text-6xl mb-6\">\n              Make arXiv Readable (Again?) \n            </h1>\n            <p className=\"mt-3 max-w-md mx-auto text-base text-gray-600 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl mb-8\">\n              Paste an arXiv <code className=\"text-sm bg-gray-200 px-1 rounded\">/html/</code> URL to get started.\n            </p>\n\n            <form onSubmit={handleSubmit} className=\"space-y-4 bg-white p-6 rounded-lg shadow-md border border-gray-200\">\n              <div>\n                <label htmlFor=\"urlInput\" className=\"block text-sm font-medium text-gray-700 mb-1 text-left\">\n                  arXiv HTML URL\n                </label>\n                <input\n                  type=\"url\"\n                  id=\"urlInput\"\n                  name=\"urlInput\"\n                  value={urlInput}\n                  onChange={(e) => setUrlInput(e.target.value)}\n                  placeholder=\"https://arxiv.org/html/xxxx.xxxxx\"\n                  required\n                  className={`w-full px-4 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 ${isValidUrl === false ? 'border-red-500 ring-red-500' : 'border-gray-300 focus:border-purple-500'}`}\n                />\n                <p className={`mt-1 text-xs text-left ${isValidUrl === false ? 'text-red-600' : 'text-gray-500'}`}>\n                  {isValidUrl === false ? 'Must be like https://arxiv.org/html/...' : 'Remember the /html/ part!'}\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"dumbMode\" className=\"block text-sm font-medium text-gray-700 mb-1 text-left\">\n                  Select Dumb Mode:\n                </label>\n                <select\n                  id=\"dumbMode\"\n                  name=\"dumbMode\"\n                  value={dumbMode}\n                  onChange={(e) => setDumbMode(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 bg-white\"\n                >\n                  <option value=\"eli5\">Explain Like I'm 5</option>\n                  <option value=\"teen\">Explain Like I'm a Teenager</option>\n                  <option value=\"dude\">Explain Like a Dude</option>\n                  <option value=\"pirate\">Explain Like a Pirate</option>\n                </select>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={isSubmitting || isValidUrl === false}\n              >\n                {isSubmitting ? 'Dumbifying...' : 'Make it Dumb!'}\n              </button>\n            </form>\n            {error && (\n              <div className=\"mt-4 p-3 bg-red-100 border border-red-300 text-red-700 rounded-md\">\n                Error: {error}\n              </div>\n            )}\n          </div>\n        )}\n\n        {isSubmitting && (\n          <div className=\"text-center py-10\">\n            <p className=\"text-lg font-semibold text-purple-700\">Processing the paper...</p>\n            <p className=\"text-sm text-gray-600\">Harnessing the power of dumbness...</p>\n            <svg className=\"animate-spin h-8 w-8 text-purple-600 mx-auto mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n        )}\n\n        {(textChunks || funTextChunks) &&  ( \n          <div className=\"w-full max-w-4xl mx-auto\">\n            <div className=\"flex justify-between items-center mb-6 pb-4 border-b border-gray-200\">\n              <h2 className=\"text-2xl font-bold text-gray-800\">\n                {showFunVersion ? ' Fun Version ' : ' Original Content'}\n              </h2>\n              <div className=\"flex items-center gap-4\">\n                {(textChunks && textChunks.length > 0) && ( \n                  <button\n                    onClick={() => setShowFunVersion(prev => !prev)}\n                    className={`py-1 px-4 rounded-full text-sm font-medium border transition duration-150 ease-in-out ${showFunVersion\n                      ? 'bg-purple-100 text-purple-700 border-purple-300 hover:bg-purple-200 focus:ring-2 focus:ring-purple-400'\n                      : 'bg-blue-100 text-blue-700 border-blue-300 hover:bg-blue-200 focus:ring-2 focus:ring-blue-400'\n                      }`}\n                    disabled={showFunVersion && (!funTextChunks || funTextChunks.length !== textChunks.length)}\n                  >\n                    {showFunVersion \n                        ? (!funTextChunks ? 'Loading Original...' : 'Switch to Original') \n                        : (!funTextChunks ? 'Loading Fun...' : 'Switch to Fun Version')\n                    }\n                  </button>\n                )}\n                <button\n                  onClick={() => { setScrapedHtml(null); setTextChunks(null); setFunTextChunks(null); setError(''); setUrlInput(''); setShowFunVersion(true); }} \n                  className=\"py-1 px-4 border border-gray-300 rounded-full text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500 transition duration-150 ease-in-out\"\n                >Scrape Another</button>\n              </div>\n            </div>\n\n            <div className=\"max-w-none\">\n              {(() => {\n                const cardBgClass = showFunVersion ? 'bg-purple-50 border-purple-200' : 'bg-white border-gray-200';\n\n                // Ensure original textChunks exist before trying to map\n                if (!textChunks || textChunks.length === 0) {\n                   return <p className=\"text-gray-500 text-center\">No text content chunks found.</p>;\n                }\n\n                return (\n                  <div className=\"flex flex-col gap-4\">\n                  {textChunks.map((originalChunk, index) => (\n                      <div\n                      key={index}\n                      className={`p-4 rounded-lg shadow border overflow-hidden ${cardBgClass}`}\n                      >\n                      {showFunVersion ? (\n                        // If fun version selected, check if it's loaded for this index\n                        funTextChunks && funTextChunks[index] !== null ? (\n                            <p className=\"text-gray-800 whitespace-pre-wrap\">\n                                {funTextChunks[index]}\n                            </p>\n                        ) : (\n                            // Show loading or placeholder if fun text isn't ready\n                            <p className=\"text-gray-500 italic\">Loading fun version (chunk {index + 1})...</p>\n                        )\n                      ) : (\n                        // Otherwise, show the original chunk\n                        <p className=\"text-gray-800 whitespace-pre-wrap\">\n                            {originalChunk}\n                        </p>\n                      )}\n                      </div>\n                  ))}\n                  </div>\n                );\n                  \n                // Fallback if something went wrong (should ideally be covered above)\n                return <p className=\"text-gray-500 text-center\">Error displaying content.</p>;\n\n              })()}\n            </div>\n          </div>\n        )}\n      </main>\n      <footer className=\"w-full py-4 text-center text-xs text-gray-500 border-t border-gray-200 mt-12\">\n        Built with questionable amounts of caffeine.\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}